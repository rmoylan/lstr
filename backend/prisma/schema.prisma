// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Privacy {
  ANONYMOUS
  ASSOCIATES
  PRIVATE
  PUBLIC
}

enum Role {
  GOD
  ADMIN
  USER
}

enum ScaleType {
  PRECISE
  PROPORTIONAL
}

model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  email String @unique
  role Role @default(USER)
  lists List[]
  comments Comment[]
  votes Vote[]
  setting Setting @relation(fields: [settingId], references: [id])
  settingId String 
}

model List {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  name String
  items ListItem[]
  tags Tag[]
  author User @relation(fields: [authorId], references: [id])
  authorId String
  privacy Privacy
  genre Genre[]
  scale Scale @relation(fields: [scaleId], references: [id])
  scaleId String
  comments Comment[]
  votes Vote[]
}

model Setting {
  id String @id @default(uuid())
  privacy Privacy
  users User[]
}

model ListItem {
  id String @id @default(uuid())
  name String
  list List @relation(fields: [listId], references: [id])
  listId String
  comments Comment[]
  rating Rating @relation(fields: [ratingId], references: [id])
  ratingId String
}

model Vote {
  id String @id @default(uuid())
  author User @relation(fields: [authorId], references: [id])
  authorId String
  list List @relation(fields: [listId], references: [id])
  listId String
}

model Comment {
  id String @id @default(uuid())
  author User @relation(fields: [userId], references: [id])
  userId String
  list List @relation(fields: [listId], references: [id])
  listId String
  listItem ListItem @relation(fields: [listItemId], references: [id])
  listItemId String
}

model Scale {
  id String @id @default(uuid())
  name String
  max Float
  min Float
  type ScaleType
  lists List[]
}

model Genre {
  id String @id @default(uuid())
  name String
  lists List[]
}

model Rating {
  id String @id @default(uuid())
  listItem ListItem[]
  value Float
}

model Tag {
  id String @id @default(uuid())
  lists List[]
}
